/*
 * Copyright (c) 2015 RWTH Aachen. All rights reserved.
 *
 * http://www.se-rwth.de/
 */
package org.nest;

/**
  Grammar representing ODE expressions.
*/
grammar ODE extends org.nest.Commons, org.nest.Units {
  /** ASTOdeDeclaration. Represents a block of equations and differential equations.

    @attribute Equation      List with equations, e.g. "I = exp(t)" od differential equations.
  */
  OdeDeclaration  = (Equation | Shape | ODEAlias | NEWLINE)+;

  ODEAlias = ([recordable:"recordable"])? variableName:Name Datatype "=" Expr (";")?;

  /** ASTeq Represents an equation, e.g. "I = exp(t)" or epresents an differential equations, e.g. "V_m' = V_m+1"..
    @attribute lhs      Left hand side, e.g. a Variable.
    @attribute rhs      Expression defining the right hand side.
  */
  Equation = lhs:Derivative "=" rhs:Expr (";")?;

  Derivative = name:QualifiedName (differentialOrder:"\'")*;

  Shape = "shape" lhs:Variable "=" rhs:Expr (";")?;

}
